#!/bin/bash

# Gearbox - Essential Tools Installer
# Main command-line interface for installing development tools

set -e

# Find the script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Source configuration
if [[ -f "$SCRIPT_DIR/config.sh" ]]; then
    source "$SCRIPT_DIR/config.sh"
else
    echo "Error: config.sh not found in $SCRIPT_DIR"
    exit 1
fi

# Show available tools
show_tools() {
    cat << EOF
Available Tools:

Core Development Tools:
  fd          Fast file finder (Rust)
              Alternative to 'find' with intuitive syntax and parallel search
              
  ripgrep     Fast text search (Rust)
              High-performance grep replacement with PCRE2 and multi-line support
              
  fzf         Fuzzy finder (Go)
              Interactive file/command finder with shell integration
              
  jq          JSON processor (C)
              Command-line JSON processor with powerful query capabilities

Navigation & File Management:
  zoxide      Smart cd command (Rust)
              Smarter directory navigation with frecency (frequency + recency)
              
  yazi        Terminal file manager (Rust)
              Fast terminal file manager with vim-like keybindings and preview
              
  fclones     Duplicate file finder (Rust)
              Efficient tool to find, remove, and deduplicate identical files
              
  serena      Coding agent toolkit (Python)
              Semantic retrieval and editing capabilities for codebases
              
  uv          Python package manager (Rust)
              Extremely fast Python package and project manager

Media & Image Processing:
  ffmpeg      Video/audio processing (C/C++)
              Comprehensive media processing suite with extensive codec support
              
  imagemagick Image manipulation (C/C++)
              Powerful image processing and manipulation toolkit
              
  7zip        Compression tool (C/C++)
              High-ratio compression tool with multiple format support

Usage Examples:
  gearbox install fd ripgrep fzf       # Install core development tools
  gearbox install ffmpeg               # Install just ffmpeg
  gearbox install --minimal fd ripgrep # Fast builds
  gearbox install --maximum ffmpeg     # Full-featured build

For detailed tool documentation, see: docs/USER_GUIDE.md

EOF
}

# Show help
show_help() {
    cat << EOF
Gearbox - Essential Tools Installer

Usage: gearbox [COMMAND] [OPTIONS] [TOOLS...]

Commands:
  install     Install tools (default command)
  list        Show available tools with descriptions
  help        Show this help message

Install Options:
  --minimal           Fast builds with essential features
  --maximum           Full-featured builds with all optimizations
  --skip-common-deps  Skip common dependency installation
  --run-tests         Run test suites for validation
  --no-shell          Skip shell integration setup (fzf)

Available Tools:
  fd          Fast file finder (Rust)
  ripgrep     Fast text search (Rust) 
  fzf         Fuzzy finder (Go)
  jq          JSON processor (C)
  zoxide      Smart cd command (Rust)
  yazi        Terminal file manager (Rust)
  fclones     Duplicate file finder (Rust)
  serena      Coding agent toolkit (Python)
  uv          Python package manager (Rust)
  ffmpeg      Video/audio processing (C/C++)
  imagemagick Image manipulation (C/C++)
  7zip        Compression tool (C/C++)

Examples:
  gearbox list                         # Show available tools
  gearbox install fd ripgrep fzf       # Install specific tools (recommended)
  gearbox install                      # Install all tools (with confirmation)
  gearbox install --minimal fd ripgrep # Fast installation
  gearbox install --maximum ffmpeg     # Full-featured build

For detailed documentation, see:
  docs/USER_GUIDE.md      - Complete user guide
  docs/DEVELOPER_GUIDE.md - Technical documentation

EOF
}

# Parse command
COMMAND=""  # No default command - require explicit action
if [[ $# -gt 0 ]] && [[ ! "$1" =~ ^-- ]]; then
    case "$1" in
        install)
            COMMAND="install"
            shift
            ;;
        list|ls)
            show_tools
            exit 0
            ;;
        help|--help|-h)
            show_help
            exit 0
            ;;
        *)
            # If first arg is not a known command and doesn't start with --, 
            # assume it's a tool name and use install command
            COMMAND="install"
            ;;
    esac
else
    # No arguments provided - show help instead of auto-installing everything
    if [[ $# -eq 0 ]]; then
        show_help
        exit 0
    fi
fi

# Handle commands
case "$COMMAND" in
    install)
        # Check if no tools specified (just "gearbox install" with no tool names)
        if [[ $# -eq 0 ]] || [[ "$1" =~ ^-- ]]; then
            # Installing all tools - show confirmation
            echo "You're about to install ALL 12 tools from source:"
            echo "  fd, ripgrep, fzf, jq, zoxide, yazi, fclones, uv, serena, ffmpeg, imagemagick, 7zip"
            echo ""
            echo "This will:"
            echo "  • Take 30-60 minutes depending on your system"
            echo "  • Download and compile source code"
            echo "  • Install to /usr/local/bin/"
            echo "  • Require ~2GB of temporary build space"
            echo ""
            echo "Tip: Use 'gearbox list' to see available tools"
            echo "     Use 'gearbox install fd ripgrep fzf' for specific tools"
            echo ""
            read -p "Continue with full installation? [y/N]: " -n 1 -r
            echo
            if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                echo "Installation cancelled."
                echo "Run 'gearbox list' to see available tools."
                exit 0
            fi
            echo "Starting full installation..."
            echo
        fi
        
        # Ensure we're in the build directory
        cd "$BUILD_DIR" || {
            error "Could not access build directory: $BUILD_DIR"
        }
        
        # Run the main installer
        exec "$SCRIPT_DIR/scripts/install-all-tools.sh" "$@"
        ;;
    *)
        error "Unknown command: $COMMAND. Use 'gearbox help' for usage information."
        ;;
esac